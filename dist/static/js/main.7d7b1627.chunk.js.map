{"version":3,"sources":["component/layout/SignedInLinks.js","store/actions/authActions.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/porjects/ProjectSummary.js","component/porjects/ProjectList.js","component/dashboard/Dashboard.js","component/porjects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","component/porjects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","_ref","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","porjects_ProjectSummary","Dashboard","_this$props","this","porjects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseCongfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App_0","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d7b1627.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/create\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut}>Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n\r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n      const firebase = getFirebase();\r\n      firebase.auth().signOut().then(()=>{\r\n        dispatch({\r\n          type: 'SIGNOUT_SUCCESS'\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Log In</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({notifications}) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item =>{\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project =>{\r\n                    return (\r\n                        <Link to={'/project/' + project.id} key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../porjects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const {projects, auth, notifications} = this.props;\r\n        if(!auth.uid){\r\n            return (<Redirect to='/signin' />)\r\n        }else{\r\n            return(\r\n                <div className=\"dashbord container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6\">\r\n                            <ProjectList projects={projects} />\r\n                        </div>\r\n                        <div className=\"col s12 m5 offset-m1\">\r\n                            <Notifications notifications={notifications} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt','desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n      if(!auth.uid){\r\n        return (<Redirect to='/signin' />)\r\n      }else{\r\n        if(project){\r\n            return (\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">{project.title}</span>\r\n                            <p>{project.content}</p>\r\n                        </div>\r\n                        <div className=\"card-action gret lighten-4 grey-text\">\r\n                            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"container center\">\r\n                    <p>Loading project</p>\r\n                </div>\r\n            )\r\n        }\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n      if(auth.uid){\r\n        return (<Redirect to='/' />)\r\n      }else{\r\n        return (\r\n          <div className=\"container\">\r\n            <form className=\"white\" onSubmit={this.handleSubmit}>\r\n              <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id='email' onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id='password' onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                <div className=\"center red-text\">\r\n                  { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions'; \r\n\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid){\r\n      return (<Redirect to='/' />)\r\n    }else{\r\n        return (\r\n            <div className=\"container\">\r\n              <form onSubmit={this.handleSubmit} className=\"white\">\r\n                  <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                  <div className=\"input-field\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                      <label htmlFor=\"lastName\">Last Name</label>\r\n                      <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                      <label htmlFor=\"firstName\">First Name</label>\r\n                      <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                     <div className=\"center red-text\">\r\n                        { authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                  </div>\r\n              </form>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n        //console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n      const { auth } = this.props;\r\n      if(!auth.uid){\r\n        return (<Redirect to='/signin' />)\r\n      }else{\r\n        return (\r\n            <div className=\"container\">\r\n              <form onSubmit={this.handleSubmit} className=\"white\">\r\n                  <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                  <div className=\"input-field\">\r\n                      <label htmlFor=\"title\">Title</label>\r\n                      <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                      <label htmlFor=\"content\">Project Content</label>\r\n                      <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                  </div>\r\n              </form>\r\n            </div>\r\n          )\r\n      }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    //return a function not an action\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './component/layout/Navbar';\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/porjects/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/porjects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  \r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          authError: null\r\n        }\r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error');\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;","const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project: ', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('created project error: ', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyA1ENx1WMlGadqYqMDg7vq88Yjq3HhTHH8\",\r\n    authDomain: \"net-ninja-mario-plan-84b3d.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-mario-plan-84b3d.firebaseio.com\",\r\n    projectId: \"net-ninja-mario-plan-84b3d\",\r\n    storageBucket: \"net-ninja-mario-plan-84b3d.appspot.com\",\r\n    messagingSenderId: \"786321014460\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({\r\n      timestampsInSnapshots: true\r\n  });\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport firebaseCongfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebaseCongfig),\n        reactReduxFirebase(firebaseCongfig, { useFirestoreForProfile: true,userProfile: 'users', attachAuthIsReady: true})\n    )\n)\n\n//do not render to the dom until firebaseAuth is ready\nstore.firebaseAuthIsReady.then(()=>{   \n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>\n        , document.querySelector('#root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}